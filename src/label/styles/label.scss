@use "../../styles/variables";
@use "mixin";
@use "sass:map";

.thy-label {
    font-weight: normal;
    display: inline-flex;
    align-items: center;
    line-height: 1;
    font-size: variables.$font-size-sm;
    border-radius: variables.$border-radius;
    color: variables.$white;

    /**** size ****/
    @each $size, $padding in variables.$label-size-paddings {
        & {
            @include mixin.label-size($size, $padding);
        }
    }

    thy-icon,
    i {
        // cursor: pointer;
        font-size: variables.$font-size-sm;
    }

    &.thy-label-state {
        @include mixin.label-size(md, map-get(variables.$label-size-paddings, md));
    }

    &.thy-label-pill {
        font-size: variables.$font-size-sm;
        border-radius: variables.$label-pill-radius;
        color: variables.$gray-700;
        // background: $gray-200;
    }

    /**** label type ****/
    &-default {
        @include mixin.label-color-variant(variables.$gray-500, variables.$gray-600);
        background-color: variables.$label-default-bg;
    }

    &-primary {
        @include mixin.label-variant(variables.$label-primary-bg);
        @include mixin.label-color-variant(variables.$white, variables.$white);
    }

    &-success {
        @include mixin.label-variant(variables.$label-success-bg);
        @include mixin.label-color-variant(variables.$white, variables.$white);
    }

    &-info {
        @include mixin.label-variant(variables.$label-info-bg);
        @include mixin.label-color-variant(variables.$white, variables.$white);
    }

    &-warning {
        @include mixin.label-variant(variables.$label-warning-bg);
        @include mixin.label-color-variant(variables.$white, variables.$white);
    }

    &-danger {
        @include mixin.label-variant(variables.$label-danger-bg);
        @include mixin.label-color-variant(variables.$white, variables.$white);
    }

    &-emboss-default {
        @include mixin.label-color-variant(variables.$gray-500, variables.$gray-600);
        // background-color: $label-default-bg;
        @include mixin.label-variant(rgba(variables.$gray-700, 0.1));
    }

    &-emboss-primary {
        @include mixin.label-variant(rgba(variables.$primary, 0.1));
        @include mixin.label-color-variant(variables.$primary, variables.$primary);
    }

    &-emboss-warning {
        @include mixin.label-variant(rgba(variables.$warning, 0.1));
        @include mixin.label-color-variant(variables.$warning, variables.$warning);
    }

    &-emboss-danger {
        @include mixin.label-variant(rgba(variables.$danger, 0.1));
        @include mixin.label-color-variant(variables.$danger, variables.$danger);
    }

    &-emboss-status {
        thy-icon.thy-icon,
        i.wtf {
            font-size: variables.$font-size-base;
            margin-right: 6px;
        }
    }

    &-outline {
        border: 1px solid;
        background: transparent;

        @each $size, $padding in variables.$label-size-paddings {
            &.thy-label {
                @include mixin.label-size($size, $padding, variables.$label-size-outline-diff);
            }
        }
    }
}

.thy-dot-label {
    margin: 0 3px 0 0;
    &.thy-label {
        padding: 0;
    }
}
