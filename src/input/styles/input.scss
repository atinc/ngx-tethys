@use "../../styles/bootstrap/variables" as bootstrap-variables;
@use "../../styles/variables";

.thy-input {
    position: relative;
    width: 100%;
    padding: 0 !important;
    display: flex !important;
    align-items: center;
    .input-border {
        position: absolute;
        width: 100%;
        height: 100%;
        border: bootstrap-variables.$input-border-width solid variables.$input-border-color;
    }
    .form-control {
        flex: 1;
        border: 0;
    }
    .input-prepend {
        margin-left: variables.$input-padding-x;
    }
    .input-append {
        margin-right: variables.$input-padding-x;
    }
    .input-password-icon {
        color: variables.$gray-300;
        .thy-icon {
            font-size: 20px;
        }
    }
    .input-label {
        position: absolute;
        top: 1px;
        left: 10px;
        background: variables.$white;
        padding: 0 5px;
        font-size: variables.$font-size-sm;
        transition: all 0.3s ease-out 0.1s;
        color: variables.$primary;
        width: 1px;
        height: 1px;
        overflow: hidden;
        z-index: -1;
        &.active {
            width: auto;
            height: auto;
            z-index: 0;
            top: -10px;
        }
        &-sm,
        &-xs {
            &.active {
                top: -13px;
            }
        }
    }
    &[disabled] {
        background-color: variables.$input-disabled-bg;
        .input-append,
        .input-prepend {
            background-color: variables.$input-disabled-bg;
            pointer-events: none;
        }
    }
}

.input-search-container {
    position: relative;
    display: block;
    width: 100%;
    .input-prefix-icon,
    .input-suffix-icon {
        line-height: 1;
        position: absolute;
        z-index: 2;
        i {
            font-size: variables.$font-size-base;
        }
    }
    .input-prefix-icon {
        left: variables.$input-padding-x;
        top: calc((100% - 16px) / 2);
        color: variables.$input-icon-color;
    }
    .input-suffix-icon {
        right: variables.$input-padding-x;
        top: calc((100% - 16px) / 2);
    }
    .input-search-control {
        padding-left: variables.$input-padding-x + variables.$input-padding-x + 1rem;
        padding-right: variables.$input-padding-x + variables.$input-padding-x + 1rem;
        transition: none;
    }
    &.input-search-ellipse {
        .input-search-control {
            border-radius: variables.$input-ellipse-radius;
            background: variables.$input-ellipse-background-color;
            &:not(:disabled) {
                &:hover {
                    background: variables.$input-ellipse-hover-focus-background-color;
                    border-color: variables.$input-ellipse-hover-border-color;
                }
                &:focus {
                    background: variables.$input-ellipse-hover-focus-background-color;
                    border-color: variables.$input-ellipse-focus-border-color;
                }
            }
        }
    }
}

.input-label-container {
    position: relative;
    display: block;
    width: 100%;
    .input-label-control {
        // padding: $input-search-padding-y ($input-padding-x + $input-padding-x + 0.5rem);
    }
    .input-label {
        position: absolute;
        top: 1px;
        left: 10px;
        background: variables.$white;
        padding: 0 5px;
        font-size: variables.$font-size-sm;
        transition: all 0.3s ease-out 0.1s;
        color: variables.$primary;
        width: 1px;
        height: 1px;
        overflow: hidden;
        z-index: -1;
        &.active {
            width: auto;
            height: auto;
            z-index: 0;
            top: -10px;
        }
        &-sm,
        &-xs {
            &.active {
                top: -13px;
            }
        }
    }
}

// Form control feedback states
//
// Apply contextual and semantic states to individual form controls.
.has-feedback {
    // Enable absolute positioning
    position: relative; // Ensure icons don't overlap text
    .form-control {
        padding-right: 2 * variables.$input-padding-x + 1rem;
    }
}

// Feedback icon (requires .glyphicon classes)
.form-control-feedback {
    position: absolute; // top: (2 * $input-padding-y + $input-line-height * $font-size-base - $input-line-height) / 2;
    top: 50%;
    // margin-top: -(($font-size-md * $input-line-height) / 2);
    transform: translateY(-50%);
    right: variables.$input-padding-x;
    z-index: 2; // Ensure icon is above input groups
    display: block; // width: $input-hei;
    // height: @input-height-base;
    // line-height: $input-line-height;
    text-align: center;
    pointer-events: none;
    font-size: variables.$font-size-md;
    -webkit-font-smoothing: subpixel-antialiased;
    color: variables.$input-icon-color;
}

.form-group {
    > .col,
    > [class*='col-'] {
        > .form-control-feedback {
            // 0.9375rem is ($grid-gutter-width / 2)
            right: 0.9375rem + variables.$input-padding-x;
        }
    }
}

// .input-lg + .form-control-feedback,
// .input-group-lg + .form-control-feedback,
// .form-group-lg .form-control + .form-control-feedback {
//     width: @input-height-large;
//     height: @input-height-large;
//     line-height: @input-height-large;
// }
// .input-sm + .form-control-feedback,
// .input-group-sm + .form-control-feedback,
// .form-group-sm .form-control + .form-control-feedback {
//     width: @input-height-small;
//     height: @input-height-small;
//     line-height: @input-height-small;
// }
