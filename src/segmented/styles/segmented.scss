@use "../../styles/variables.scss";
@use "../../styles/bootstrap/mixins/text-truncate.scss";
@use "./mixin.scss" as segmented-mixin;

.#{variables.$thy-prefix}-segmented {
    display: inline-block;
    padding: variables.$segmented-container-padding;
    color: variables.$segmented-default-color;
    background-color: variables.$segmented-bg;
    border-radius: variables.$segmented-border-radius;
    transition: all 0.3s ease-in-out;

    @each $size, $height in variables.$segmented-sizes {
        @include segmented-mixin.segmented-size-variant($size, $height);
    }

    &-group {
        position: relative;
        display: flex;
        align-items: stretch;
        justify-items: flex-start;
        width: 100%;
        label {
            display: unset !important;
            margin-bottom: unset !important;
        }
    }

    &-item {
        position: relative;
        text-align: center;
        cursor: pointer;
        transition: color 0.3s ease-in-out;

        .icon-with-text {
            color: variables.$segmented-icon-with-text-default-color;
        }

        &:not(.disabled) {
            &:hover,
            &:focus {
                color: variables.$segmented-hover-color;
                .icon-with-text {
                    color: variables.$segmented-icon-with-text-hover-color;
                }
            }

            &.active {
                @include segmented-mixin.segmented-item-active();
                color: variables.$segmented-active-color;
                .icon-with-text {
                    color: variables.$segmented-icon-with-text-active-color;
                }
            }
        }

        &.disabled {
            .#{variables.$thy-prefix}-segmented-item-label,
            .#{variables.$thy-prefix}-segmented-item-icon {
                @include segmented-mixin.segmented-disabled();
            }
        }

        &-label {
            @include text-truncate.text-truncate();
            word-break: keep-all;
            text-align: center;
            &-only-icon {
                width: variables.$segmented-item-only-icon-width;
            }
        }

        &-icon + * {
            display: inline-block;
            margin-left: variables.$segmented-text-margin-left;
        }
    }

    &-block {
        width: 100%;
        .#{variables.$thy-prefix}-segmented-group {
            display: flex;
            .#{variables.$thy-prefix}-segmented-item {
                flex: 1;
                min-width: 0;
                max-width: unset;
            }
        }
    }

    &.disabled {
        .#{variables.$thy-prefix}-segmented-item-label,
        .#{variables.$thy-prefix}-segmented-item-icon {
            @include segmented-mixin.segmented-disabled();
        }
    }

    &-thumb {
        @include segmented-mixin.segmented-item-active();
        position: absolute;
        top: 0;
        left: 0;
        width: 0;
        height: 100%;
        padding: 4px 0;
    }
}
